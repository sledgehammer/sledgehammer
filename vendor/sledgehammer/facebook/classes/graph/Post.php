<?php
/**
 * FacebookPost
 */
namespace Sledgehammer\Facebook;
/**
 * A Page in the Graph API.
 * @link https://developers.facebook.com/docs/reference/api/post/
 */
class Post extends \Sledgehammer\GraphObject {

	/**
	 * The post ID
	 * @var string
	 */
	public $id;

	/**
	 * Information about the user who posted the message
	 * object containing the name and Facebook id of the user who posted the message
	 * @var array
	 */
	public $from;

	/**
	 * Profiles mentioned or targeted in this post
	 * Contains in data an array of objects, each with the name and Facebook id of the user
	 * @var array
	 */
	public $to;

	/**
	 * The message
	 * @var string
	 */
	public $message;

	/**
	 * Objects tagged in the message (Users, Pages, etc)
	 * object containing fields whose names are the indexes to where objects are mentioned in the message field; each field in turn is an array containing an object with id, name, offset, and length fields, where length is the length, within the message field, of the object mentioned
	 * @var array
	 */
	public $message_tags;

	/**
	 * If available, a link to the picture included with this post
	 * @var string
	 */
	public $picture;

	/**
	 * The link attached to this post
	 * @var string
	 */
	public $link;

	/**
	 * The name of the link
	 * @var string
	 */
	public $name;

	/**
	 * The caption of the link (appears beneath the link name)
	 * @var string
	 */
	public $caption;

	/**
	 * A description of the link (appears beneath the link caption)
	 * @var string
	 */
	public $description;

	/**
	 * A URL to a Flash movie or video file to be embedded within the post.
	 * @var string
	 */
	public $source;

	/**
	 * A list of properties for an uploaded video, for example, the length of the video.
	 * array of objects containing the name and text.
	 * @var array
	 */
	public $properties;

	/**
	 * A link to an icon representing the type of this post.
	 * @var string
	 */
	public $icon;

	/**
	 * A list of available actions on the post (including commenting, liking, and an optional app-specified action)
	 * array of objects containing the name and link
	 * @var array
	 */
	public $actions;

	/**
	 * The privacy settings of the Post
	 * @permission read_stream
	 * array containing the value field and optional friends, networks, allow, deny and description fields.
	 * @var array
	 */
	public $privacy;

	/**
	 * A string indicating the type for this post (including link, photo, video)
	 * @var string
	 */
	public $type;

	/**
	 * Likes for this post
	 * Structure containing a data object and the count of total likes, with data containing an array of objects, each with the name and Facebook id of the user who liked the post
	 * @var array
	 */
	public $likes;

	/**
	 * Location associated with a Post, if any
	 * @permission read_stream
	 * array containing id and name of Page associated with this location, and a location field containing geographic information such as latitude, longitude, country, and other fields (fields will vary based on geography and availability of information)
	 * @var array
	 */
	public $place;

	/**
	 * Text of stories not intentionally generated by users, such as those generated when two users become friends; you must have the "Include recent activity stories" migration enabled in your app to retrieve these stories
	 * @permission read_stream
	 * @var string
	 */
	public $story;

	/**
	 * Objects (Users, Pages, etc) tagged in a non-intentional story; you must have the "Include recent activity stories" migration enabled in your app to retrieve these tags
	 * @permission read_stream
	 * array containing fields whose names are the indexes to where objects are mentioned in the message field; each field in turn is an array containing an object with id, name, offset, and length fields, where length is the length, within the message field, of the object mentioned
	 * @var array
	 */
	public $story_tags;

	/**
	 * Objects (Users, Pages, etc) tagged as being with the publisher of the post ("Who are you with?" on Facebook)
	 * @permission read_stream
	 * objects containing id and name fields, encapsulated in a data[] array
	 * @var array
	 */
	public $with_tags;

	/**
	 * Comments for this post
	 * @permission read_stream
	 * Structure containing a data object containing an array of objects, each with the id, from, message, and created_time for each comment
	 * @var array
	 */
	public $comments;

	/**
	 * The Facebook object id for an uploaded photo or video
	 * @permission read_stream
	 * @var number
	 */
	public $object_id;

	/**
	 * Information about the application this post came from
	 * @permission read_stream
	 * object containing the name and id of the application
	 * @var array
	 */
	public $application;

	/**
	 * The time the post was initially published
	 * @permission read_stream
	 * string containing ISO-8601 date-time
	 * @var string
	 */
	public $created_time;

	/**
	 * The time of the last comment on this post
	 * @permission read_stream
	 * containing ISO-8601 date-time
	 * @var string
	 */
	public $updated_time;

	/**
	 * Constructor
	 * @param mixed $id
	 * @param array $parameters
	 */
	function __construct($id, $parameters = null, $preload = false) {
		if ($parameters === null) {
			$parameters = array('fields' => self::getAllowedFields());
		}
		parent::__construct($id, $parameters, $preload);
	}

	protected static function getFieldPermissions() {
		return array(
			'privacy' => 'read_stream',
			'place' => 'read_stream',
			'story' => 'read_stream',
			'story_tags' => 'read_stream',
			'with_tags' => 'read_stream',
			'comments' => 'read_stream',
			'object_id' => 'read_stream',
			'application' => 'read_stream',
			'created_time' => 'read_stream',
			'updated_time' => 'read_stream',
		);
	}

}

?>
